# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# ---- Options ----
option(ENABLE_TEST_COVERAGE "Enable test coverage" OFF)

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(Csd LANGUAGES CXX C)

include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup()

# target
add_executable(CsdTest "")
set_target_properties(CsdTest PROPERTIES OUTPUT_NAME "CsdTest")
set_target_properties(CsdTest PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(CsdTest Csd)
target_compile_options(CsdTest PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(CsdTest PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(CsdTest PRIVATE -O3)
endif()
if(MSVC)
  set_property(TARGET CsdTest PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(CsdTest PRIVATE
    Csd
    ${CONAN_LIBS}
)
target_link_options(CsdTest PRIVATE
    -m64
)
target_sources(CsdTest PRIVATE
    tests/test_csd.cpp
)

# target
add_library(Csd STATIC "")
set_target_properties(Csd PROPERTIES OUTPUT_NAME "Csd")
set_target_properties(Csd PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_compile_options(Csd PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(Csd PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(Csd PRIVATE -O3)
endif()
if(MSVC)
    set_property(TARGET Csd PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(Csd PRIVATE
    src/csd.cpp
)

# ---- Add ${PROJECT_NAME}Tests ----

enable_testing()

# Note: doctest and similar testing frameworks can automatically configure CMake
# tests. For other testing frameworks add the tests target instead:
# add_test(NAME ecgenTests COMMAND ${PROJECT_NAME}Tests)

# string(TOLOWER ${PROJECT_NAME} PROJECT_FILE_NAME)
add_test(NAME ${PROJECT_FILE_NAME}Tests COMMAND CsdTest)

# ---- code coverage ----

if(ENABLE_TEST_COVERAGE)
  target_compile_options(${PROJECT_NAME} PUBLIC -O0 -g -fprofile-arcs
                                                -ftest-coverage)
  target_link_options(${PROJECT_NAME} PUBLIC -fprofile-arcs -ftest-coverage)
endif()
